spring.application.name=musicopedia-be

# Server Configuration
server.port=${PORT:8080}

# PostgreSQL Database Configuration for Production
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration for Production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1200000}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With,Accept,Origin}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:false}
app.cors.max-age=${CORS_MAX_AGE:3600}

# Logging Configuration
logging.level.musicopedia=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN

# Admin User Configuration
admin.token=${ADMIN_TOKEN}